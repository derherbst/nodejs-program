"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const uuid_1 = require("uuid");
const user_1 = require("../models/user");
const helpers_1 = require("../helpers/helpers");
const users_1 = require("../data/users");
exports.createUser = (req, res) => {
    const body = req.body;
    const { login, password, age, isDeleted, } = body;
    const userId = uuid_1.v4();
    const newUser = new user_1.User(userId, login, password, age, isDeleted);
    users_1.USERS.push(newUser);
    res.status(200).json({
        message: 'User was created!',
        createdUser: newUser,
    }).end();
};
exports.getUsers = (req, res) => {
    const { loginSubstring, limit } = req.query;
    const suggestedUsers = (loginSubstring && limit)
        ? helpers_1.getAutoSuggestUsers(users_1.USERS, loginSubstring, limit)
        : users_1.USERS;
    res.json({ users: suggestedUsers });
};
exports.updateUser = (req, res) => {
    res.status(200).json({
        message: 'Updated!',
        updatedUser: req.body,
    }).end();
};
exports.deleteUser = (req, res) => {
    const userId = req.params.id;
    const userIndex = users_1.USERS.findIndex(user => user.id === userId);
    if (userIndex < 0) {
        res.status(404).json({
            status: 'failed',
            message: 'Could not find user!'
        });
    }
    else {
        users_1.USERS[userIndex] = Object.assign(Object.assign({}, users_1.USERS[userIndex]), { isDeleted: true });
        res.status(200).json({
            message: 'User deleted!',
            updatedUser: users_1.USERS[userIndex],
        });
    }
};
exports.validateUserData = (req, res, next) => {
    const isLoginAvailable = helpers_1.checkIfLoginAvailable(users_1.USERS, req.body.login);
    const result = userSchema.validate(req.body);
    const { error } = result;
    if (error != null) {
        res.status(400).json({
            status: 'error',
            error: error,
        }).end();
    }
    else {
        if (isLoginAvailable) {
            next();
        }
        else {
            res.status(400).json({
                status: 'error',
                message: `User ${req.body.login} already exists!`,
            }).end();
        }
    }
};
exports.prepareDataForUpdateValidation = (req, res, next) => {
    const userIndex = users_1.USERS.findIndex(user => user.id === req.params.id);
    const newData = Object.assign(Object.assign({}, users_1.USERS[userIndex]), req.body);
    if (userIndex < 0) {
        res.status(404).json({
            status: 'failed',
            message: 'Could not find user!'
        }).end();
    }
    else {
        req.body = newData;
        next();
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29udHJvbGxlcnMvdXNlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQkFBa0M7QUFHbEMseUNBQXNDO0FBQ3RDLGdEQUFnRjtBQUNoRix5Q0FBc0M7QUFFekIsUUFBQSxVQUFVLEdBQW1CLENBQUMsR0FBK0IsRUFBRSxHQUFHLEVBQUUsRUFBRTtJQUMvRSxNQUFNLElBQUksR0FBc0IsR0FBRyxDQUFDLElBQUksQ0FBQztJQUN6QyxNQUFNLEVBQ0YsS0FBSyxFQUNMLFFBQVEsRUFDUixHQUFHLEVBQ0gsU0FBUyxHQUNaLEdBQUcsSUFBSSxDQUFDO0lBQ1QsTUFBTSxNQUFNLEdBQVcsU0FBSSxFQUFFLENBQUM7SUFDOUIsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFJLENBQ3BCLE1BQU0sRUFDTixLQUFLLEVBQ0wsUUFBUSxFQUNSLEdBQUcsRUFDSCxTQUFTLENBQ1osQ0FBQztJQUVGLGFBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDcEIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDakIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixXQUFXLEVBQUUsT0FBTztLQUN2QixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDYixDQUFDLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7SUFDakQsTUFBTSxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO0lBQzVDLE1BQU0sY0FBYyxHQUFHLENBQUMsY0FBYyxJQUFJLEtBQUssQ0FBQztRQUM1QyxDQUFDLENBQUMsNkJBQW1CLENBQUMsYUFBSyxFQUFFLGNBQWMsRUFBRSxLQUFLLENBQUM7UUFDbkQsQ0FBQyxDQUFDLGFBQUssQ0FBQztJQUVaLEdBQUcsQ0FBQyxJ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